# Online Java Quiz System

This project is an **Online Java Quiz System** developed as part of the GUVI Java course. The system allows users to take quizzes, records their scores, and maintains basic user accounts. 

## Table of Contents
1. Project Overview
2. Project Structure
3. Database Schema
4. Setting Up and Running the Program
5. Project Dependencies

---

## 1. Project Overview
The Online Java Quiz System is a Java-based application that provides a quiz platform for users. Users can log in, take a quiz, and view their scores. The system stores user data, quiz questions, and quiz results in a MySQL database.

---

## 2. Project Structure

To keep the project organized and manageable, the code is divided into multiple packages and folders. Here’s a detailed breakdown:

**Project Root Directory**  
- `src/`: The main source directory containing all Java source files.
  - `com.quizsystem`: The main package containing all other sub-packages and classes.

    - `model/`: Contains model classes representing data entities such as User, Question, and QuizResult.
      - `User.java`: Represents a user with attributes like `user_id`, `username`, `password`, and `email`.
      - `Question.java`: Represents a quiz question with attributes like `question_id`, `question_text`, and options.
      - `QuizResult.java`: Stores quiz result information, including `result_id`, `user_id`, `score`, and `quiz_date`.

    - `dao/`: Contains **Data Access Object (DAO)** classes responsible for interacting with the database.
      - `UserDAO.java`: Contains methods for creating, reading, updating, and deleting User data.
      - `QuestionDAO.java`: Contains methods for handling Question data, including fetching quiz questions.
      - `QuizResultDAO.java`: Manages quiz result data, such as saving scores and fetching user scores.

    - `service/`: Contains classes that implement the core logic and operations for the quiz.
      - `QuizService.java`: Handles the main quiz logic, including loading questions and calculating scores.

    - `main/`: Contains the main application class to run the program.
      - `Main.java`: The entry point of the application, which initializes the quiz system and manages user interactions.

- `resources/`: Contains resource files such as configuration files, SQL scripts for database creation, or any external properties files (e.g., `db.properties` for database credentials).

This structure helps organize the code, separate concerns, and enhance readability.

---

## 3. Database Schema

The database for the Online Java Quiz System uses **MySQL** and consists of three main tables:

1. **User Table**: Stores user information.
   ```sql
   CREATE TABLE User (
       user_id INT PRIMARY KEY AUTO_INCREMENT,
       username VARCHAR(50),
       password VARCHAR(50),
       email VARCHAR(100)
   );
   ```

2. **Question Table**: Stores quiz questions, options, and the correct answer.
   ```sql
   CREATE TABLE Question (
       question_id INT PRIMARY KEY AUTO_INCREMENT,
       question_text TEXT,
       option_a VARCHAR(255),
       option_b VARCHAR(255),
       option_c VARCHAR(255),
       option_d VARCHAR(255),
       correct_option CHAR(1)
   );
   ```

3. **QuizResult Table**: Stores results for each quiz attempt.
   ```sql
   CREATE TABLE QuizResult (
       result_id INT PRIMARY KEY AUTO_INCREMENT,
       user_id INT,
       score INT,
       quiz_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
       FOREIGN KEY (user_id) REFERENCES User(user_id)
   );
   ```

---

## 4. Setting Up and Running the Program

### Prerequisites
- **JDK**: Make sure you have JDK 8 or higher installed.
- **MySQL**: Set up a MySQL database and create the tables as per the schema above.
- **JDBC Driver**: Include the MySQL JDBC driver in the project’s classpath.

### Steps to Run the Program

1. **Clone or Download the Project**  
   Download the source code and open it in your preferred Java IDE, such as **IntelliJ IDEA** or **Eclipse**.

2. **Database Configuration**  
   - Create a **database** in MySQL (e.g., `quiz_db`).
   - In `DBConnection.java` (or a `db.properties` file in `resources/`), update the database URL, username, and password to match your MySQL configuration:
     ```java
     private static final String URL = "jdbc:mysql://localhost:3306/quiz_db";
     private static final String USER = "yourUsername";
     private static final String PASSWORD = "yourPassword";
     ```

3. **Run SQL Scripts to Create Tables**  
   - Use MySQL Workbench, phpMyAdmin, or the MySQL command line to create the `User`, `Question`, and `QuizResult` tables.

4. **Run the Main Class**  
   - In your IDE, locate the `Main.java` file in the `com.quizsystem.main` package and run it as a Java application.
   - The program should prompt you to log in or take a quiz based on the functionality implemented.

---

## 5. Project Dependencies
- **JDK**: Java Development Kit version 8 or higher.
- **MySQL**: Database to store quiz data.
- **JDBC Driver**: Include the MySQL JDBC driver to connect Java with MySQL.

--- 

With this structure and setup, the Online Java Quiz System should run smoothly and provide the intended functionality for users.